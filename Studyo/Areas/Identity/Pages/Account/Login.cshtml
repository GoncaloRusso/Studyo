@page
@model LoginModel

@{
    ViewData["Title"] = "Login";
}

<h1>@ViewData["Title"]</h1>
<div>
    <div>
        <section>
            <form id="account" method="post">
                <h2>Use a local account to log in.</h2>
                <hr />
                <div asp-validation-summary="ModelOnly" class="text-danger" role="alert"></div>
                <div>
                    <label asp-for="Input.Username" class="form-label">Username</label>
                    <input asp-for="Input.Username" class="form-control" autocomplete="username" aria-required="true" placeholder="Username" />
                    <span asp-validation-for="Input.Username" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Input.Password" class="form-label">Password</label>
                    <input asp-for="Input.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="Password" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div>
                    <label asp-for="Input.RememberMe" class="form-label">
                        <input class="form-check-input" asp-for="Input.RememberMe" />
                        @Html.DisplayNameFor(m => m.Input.RememberMe)
                    </label>
                </div>
                <div>
                    <button id="login-submit" type="submit" class="w-100 btn btn-lg btn-primary">Log in</button>
                </div>
                <div>
                    <p>
                        <a id="forgot-password" asp-page="./ForgotPassword">Forgot your password?</a>
                    </p>
                    <p>
                        <a asp-page="./Register" asp-route-returnUrl="@Model.ReturnUrl">Register as a new user</a>
                    </p>
                </div>
            </form>
            <div>
                <button id="googleLogin" type="button" class="w-100 btn btn-lg btn-primary">Log in with Google</button>
            </div>
        </section>
    </div>
    
</div>
<script type="module">
    import { initializeApp } from 'https://www.gstatic.com/firebasejs/9.1.2/firebase-app.js';
    import { getAuth, GoogleAuthProvider, signInWithPopup } from 'https://www.gstatic.com/firebasejs/9.1.2/firebase-auth.js';

    const firebaseConfig = {
        apiKey: "AIzaSyAWSbp4V-DqEUqiM9McGE2cCjH3tpoH-Fk",
        authDomain: "studyo-82e06.firebaseapp.com",
        projectId: "studyo-82e06",
        storageBucket: "studyo-82e06.appspot.com",
        messagingSenderId: "476036324039",
        appId: "1:476036324039:web:453727a60d8c2ed8b93ce2",
        measurementId: "G-VNP3C216FY"
    };

    // Initialize Firebase
    const app = initializeApp(firebaseConfig);
    const auth = getAuth(app);

    document.getElementById('googleLogin').addEventListener('click', () => {
        const provider = new GoogleAuthProvider();
        signInWithPopup(auth, provider).then((result) => {
            var user = result.user;

            // Substituir espaços no nome de usuário por underscores
            var username = user.displayName.replace(/ /g, '_');

            // Remover quaisquer caracteres que não sejam letras ou dígitos
            username = username.replace(/[^a-zA-Z0-9]/g, '');

            // Usar o ID do usuário como senha
            var password = user.uid;

            // Preencher o formulário com os dados do usuário
            document.getElementById('Input_Username').value = username;
            document.getElementById('Input_Password').value = password + ('.');

            // Acionar o evento de envio do formulário
            document.getElementById('account').submit();
        }).catch((error) => {
            console.error('Erro na autenticação com o Google', error);
        });
    });
</script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}